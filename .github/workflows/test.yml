name: Test

on:
  push:
  pull_request:
  schedule:
    - cron: '0 17 1,15 * *'

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.x']

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install test dependencies
        run: |
          git submodule update --init
          # The `lie_learn` dependency is really finicky to install:
          # - The `wheel` package must be separately installed first
          # - The `cython` package must be the most recent version prior to 
          #   version 3.0.  Newer version assume python3 syntax by default, 
          #   which breaks `lie_learn`, and older versions might give errors 
          #   relating to missing headers in recent versions of python.
          # - You have to install `lie_learn` fro GitHub, not from PyPI.  The 
          #   version on PyPI doesn't have one of the modules that ESCNN needs.
          # - `lie_learn` also has to be installed before the rest of 
          #   `atompaint`.  I don't understand why.
          python -m pip install --upgrade pip wheel 'cython<3.0'
          python -m pip install git+https://github.com/AMLab-Amsterdam/lie_learn
          python -m pip install -e .[test] coverage[toml]
      - name: Run test suite
        run: |
          python -m coverage run -m pytest tests/
      - name: Store coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python-version }}
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: error

  coverage:
    name: Report coverage
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: |
          python -m pip install --upgrade pip
          python -m pip install coverage[toml]
      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
      
      - name: Combine coverage data
        run: |
          python -m coverage combine coverage-data-*
          python -m coverage xml
          python -m coverage report | sed 's/^/    /' >> $GITHUB_STEP_SUMMARY

      - name: Upload Codecov report
        uses: codecov/codecov-action@v4
