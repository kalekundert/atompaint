[build-system]
requires = [
  "setuptools>=42",
  "setuptools-scm",
  "pybind11>2.10",
]
build-backend = "setuptools.build_meta"

[project]
name = "atompaint"
authors = [
  {name = "Kale Kundert", email = "kale@thekunderts.net"},
]
description = "Design macromolecular interactions by in-painting voxelized full-atom models."
readme = 'README.rst'
dynamic = ["version"]
requires-python = "~=3.10"
classifiers = [
  'Programming Language :: Python :: 3',
]
dependencies = [
  'docopt',
  'escnn @ git+https://github.com/kalekundert/escnn@9094a5f2c424a765c5ebaabe9d79e7e06a29e91e',
  'lightning',
  'more_itertools',
  'nestedtext',
  'numpy',
  'overlap',
  'pandas',
  'pandera',
  'pdbecif',
  'pyarrow',
  'pymixbox',
  'pyyaml',
  'reprfunc',
  'scipy',
  'tensorboard',
  'torch',
  'torchmetrics',
  'tqdm',
]

[project.optional-dependencies]
test = [
  'pytest',
  'pytest_tmp_files',
  'pytest_unordered',
  'parametrize_from_file',
  'hypothesis',
  'matplotlib',
  'colorcet',
]
doc = [
  'sphinx',
  'sphinx_rtd_theme',
  'autoclasstoc',
]

[project.urls]
'Documentation' = 'https://atompaint.readthedocs.io/en/latest/'
'Version Control' = 'https://github.com/kalekundert/atompaint'
'Bug Tracker' = 'https://github.com/kalekundert/atompaint/issues'
'Continuous Integration' = 'https://github.com/kalekundert/atompaint/actions'
'Test Coverage' = 'https://coveralls.io/github/kalekundert/atompaint'

[project.scripts]
ap_sbatch = "atompaint.hpc.slurm.sbatch:main"
ap_choose_origins = "atompaint.transform_pred.datasets.cli:main"
ap_transform_pred = "atompaint.transform_pred.training:main"
ap_plot_metrics = "atompaint.analysis.plot_metrics:main"

[tool.setuptools]
packages = ["atompaint"]

[tool.setuptools.dynamic]
version = {attr = "atompaint.__version__"}

[tool.ruff]
select = ["F"]
ignore = ["F405", "F403"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
addopts = "--doctest-modules --doctest-glob='*.rst'"
doctest_optionflags = 'NORMALIZE_WHITESPACE'
filterwarnings = 'ignore:.*Lazy modules are a new feature.*:UserWarning:torch.nn.modules.lazy'

[tool.coverage.run]
branch = true
parallel = true
source = ['atompaint']

[tool.coverage.report]
exclude_lines = [
    "^\\s*raise AssertionError\\b",
    "^\\s*raise NotImplementedError\\b",
]

[tool.semantic_release]
branch = 'release'
version_variable = 'atompaint/__init__.py:__version__'
build_command = 'python -m pip install flit && flit build'
major_on_zero = false
